if game.PlaceId == 1962086868 then
    repeat task.wait() until game:IsLoaded()
    local player = game.Players.LocalPlayer
    repeat task.wait() until player.Character
    local char = player.Character
    local hrp = char:WaitForChild("HumanoidRootPart")
    local hum = char:WaitForChild("Humanoid")
    local camera = workspace.CurrentCamera
    local UIS = game:GetService("UserInputService")

    local flying = false
    local speed = 60
    local controls = {
        forward = false,
        backward = false,
        left = false,
        right = false
    }

    local flightConn = nil

    local function getInputDirection()
        local moveDir = Vector3.new()
        if controls.forward then moveDir = moveDir + Vector3.new(0, 0, -1) end
        if controls.backward then moveDir = moveDir + Vector3.new(0, 0, 1) end
        if controls.left then moveDir = moveDir + Vector3.new(-1, 0, 0) end
        if controls.right then moveDir = moveDir + Vector3.new(1, 0, 0) end
        return moveDir
    end

    local function ToggleFlight()
        flying = not flying
        if flying then
            hum.PlatformStand = true
            flightConn = game:GetService("RunService").Heartbeat:Connect(function(dt)
                local moveInput = getInputDirection()
                if moveInput.Magnitude > 0 then
                    local camCF = camera.CFrame
                    local moveDir = (camCF:VectorToWorldSpace(moveInput)).Unit
                    hrp.CFrame = hrp.CFrame + moveDir * speed * dt
                end

                hrp.Velocity = Vector3.zero
                hrp.RotVelocity = Vector3.zero
                hrp.CFrame = CFrame.new(hrp.Position, hrp.Position + camera.CFrame.LookVector)
            end)
        else
            if flightConn then flightConn:Disconnect() end
            hum.PlatformStand = false
        end
    end

    -- UI
    local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    local flyButton = Instance.new("TextButton", screenGui)
    flyButton.Size = UDim2.new(0, 140, 0, 50)
    flyButton.Position = UDim2.new(0.5, -70, 0.85, 0)
    flyButton.Text = "Toggle Flight"
    flyButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    flyButton.TextColor3 = Color3.new(1, 1, 1)
    flyButton.TextScaled = true

    flyButton.MouseButton1Click:Connect(ToggleFlight)

    -- Input bindings
    UIS.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.W then controls.forward = true end
        if input.KeyCode == Enum.KeyCode.S then controls.backward = true end
        if input.KeyCode == Enum.KeyCode.A then controls.left = true end
        if input.KeyCode == Enum.KeyCode.D then controls.right = true end
    end)

    UIS.InputEnded:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.W then controls.forward = false end
        if input.KeyCode == Enum.KeyCode.S then controls.backward = false end
        if input.KeyCode == Enum.KeyCode.A then controls.left = false end
        if input.KeyCode == Enum.KeyCode.D then controls.right = false end
    end)

    player.CharacterAdded:Connect(function(c)
        char = c
        hrp = char:WaitForChild("HumanoidRootPart")
        hum = char:WaitForChild("Humanoid")
        if flying then
            ToggleFlight()
            task.wait(0.3)
            ToggleFlight()
        end
    end)
end
